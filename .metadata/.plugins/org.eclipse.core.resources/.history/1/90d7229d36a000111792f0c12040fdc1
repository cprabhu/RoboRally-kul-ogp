package roborally.program;

import java.util.*;

import roborally.model.Robot;

public class And extends CombinedCondition {

    And(String conditionString, Robot robot) {
        super(conditionString);

        String conditionsList = conditionString.substring(5,
                conditionString.length() - 1);

        // while (!conditionsList.isEmpty()) {
        // int parenthesesCounter = 0;
        // for (int i = 0; i < conditionsList.length(); i++) {
        // if ("(".equals(conditionsList.charAt(i)))
        // parenthesesCounter++;
        // else if (")".equals(conditionsList.charAt(i)))
        // parenthesesCounter++;
        // if (parenthesesCounter == 0) {
        // conditions.add(newCondition(
        // conditionsList.substring(0, i + 1), robot));
        // conditionsList = conditionsList.substring(i + 2,
        // conditionsList.length());
        // break;
        // }
        //
        // }
        // }

        int parenthesesCounter = 0;
        for (int endIndex = 0; endIndex < conditionsList.length(); endIndex++) {
            if ("(".equals(conditionsList.charAt(endIndex)))
                parenthesesCounter++;
            else if (")".equals(conditionsList.charAt(endIndex)))
                parenthesesCounter++;
        }
    }

    @Override
    public boolean evaluate() {
        for (Condition condition : conditions)
            if (!condition.evaluate())
                return false;
        return true;
    }

    private final Set<Condition> conditions = new HashSet<Condition>();
}
